// THIS FILE IS AUTOGENERATED DURING MIGRATION, DO NOT EDIT BY HAND
pragma solidity 0.5.12;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

interface IVat {
	function dai(address holder) external returns(uint256 attorontodai);
	function move(address holder, address recipient, uint256 attorontodai) external;
}

interface IDaiJoin {
	function live() external returns (uint256 boolean);
	function join(address holder, uint256 attodai) external;
	function exit(address holder, uint256 attodai) external;
}

interface IPot {
	function pie(address holder) external returns(uint256);
	function chi() external returns(uint256);
	function rho() external returns (uint256);
	function drip() external;
	function join(uint256 amount) external;
	function exit(uint256 amount) external;
}

contract RuntimeConstants {
	IERC20 constant public dai = IERC20(0x9a34b92fD912a74f92D57d9e356d8800822F0a09);
	IPot constant public pot = IPot(0xeC001bb021F011C008c8B7Ba7992E307E8c1EFf5);
	IDaiJoin constant public daiJoin = IDaiJoin(0xEde70EC9E06071f37873247ffb4838b056F0AF2B);
	IVat constant public vat = IVat(0x348360Fe3081B4c574f47461B95E930fb6380a88);
	address constant public uniswapExchange = 0x30fd6d0fdF041d6DA5a90628081f894D6878b774;
}
